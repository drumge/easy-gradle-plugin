// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
//        mavenLocal()
        maven { url 'https://www.jitpack.io' }
        google()
        jcenter()
//        maven{ url uri('https://oss.sonatype.org/content/repositories/snapshots/')} // 不一定会拉取最新的SNAPSHOT版本
//        maven{ url uri('https://oss.sonatype.org/content/groups/public')} // 不一定会拉取最新的SNAPSHOT版本
        maven{ url uri('https://oss.sonatype.org/content/groups/staging')} // 每次会拉取最新的SNAPSHOT版本
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${gradle_version}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files

        // 添加 easy-gradle-plugin 插件, 主要是为了 apply plugin: 'com.drumge.easy.plugin'
        classpath "com.github.drumge:easy-plugin:${easy_plugin_version}"

        // 以下两种添加 classpath 主要是为了在 build.gradle 中可以 import 相关的类
        // 使用了 easy-gradle-plugin 的实践项目，详情可跳转 https://github.com/drumge/kvo.git 了解
        classpath "com.github.drumge:kvo-plugin:${kvo_plugin_version}"

        // 示例本地使用 easy-gradle-plugin 插件用法
        classpath fileTree(dir: 'plugin_libs', include: ['*.jar'])

    }
}

allprojects {
    repositories {
//        mavenLocal()
        maven { url 'https://www.jitpack.io' }
        google()
        jcenter()
//        maven{ url uri('https://oss.sonatype.org/content/repositories/snapshots/')} // 不一定会拉取最新的SNAPSHOT版本
//        maven{ url uri('https://oss.sonatype.org/content/groups/public')} // 不一定会拉取最新的SNAPSHOT版本
        maven{ url uri('https://oss.sonatype.org/content/groups/staging')} // 每次会拉取最新的SNAPSHOT版本
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

